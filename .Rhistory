myfiles <- lapply(temp$url,
read.csv)
if (!(i %in% names(y))) {
print('Warning: Names are not the same')
break
}
else if(i==tail(names(y),n=1)) {
# checking if all data frames have the same column names
my_func <- function(x,y) {
for (i in names(x)) {
if (!(i %in% names(y))) {
print('Warning: Names are not the same')
break
}
else if(i==tail(names(y),n=1)) {
print('Names are identical')
}
}
}
my_func(myfiles[[1]], myfiles[[2]])
library(tidyverse)
library(reshape2)
# unificar planilhas de dados
data_thermo <- do.call("rbind", myfiles)
data_thermo <- data_thermo[, c(1:21)]
runGist("41f1670fb03e5af65e56429638166bcb")
data_thermo <- data_thermo %>%
mutate(Local = recode((instrumentName),
"thermo-grid-883f4a344cbe" = "Rio Branco do Sul", #02/08/23 15:50
"thermo-grid-f4e11e8e1321" = "Almirante Tamandaré")) %>% #15/08/2023 11:45
filter(Local == "Rio Branco do Sul" | Local == "Almirante Tamandaré") %>%
subset(localDate >= "2023-08-02" ) %>%#& localDate <= '2023-12-21'
unique() %>%
mutate(localDateTime = ymd_hms(paste0(localDate, " ", localTime))) %>%
select(Local, localDateTime, so2, no2, o3, co, pm2p5, pm10,  rh)
# unificar planilhas de dados
data_thermo <- do.call("rbind", myfiles)
data_thermo <- data_thermo[, c(1:21)]
data_thermo <- data_thermo %>%
mutate(Local = recode((instrumentName),
"thermo-grid-883f4a344cbe" = "Rio Branco do Sul", #02/08/23 15:50
"thermo-grid-f4e11e8e1321" = "Almirante Tamandaré")) %>% #15/08/2023 11:45
filter(Local == "Rio Branco do Sul" | Local == "Almirante Tamandaré") %>%
subset(localDate >= "2023-08-02" ) %>%#& localDate <= '2023-12-21'
unique() %>%
mutate(localDateTime = ymd_hms(paste0(localDate, " ", localTime))) %>%
select(Local, localDateTime, so2, no2, o3, co, pm2p5, pm10,  rh)
data_thermo <- data_thermo %>%
mutate(Local = recode((instrumentName),
"thermo-grid-883f4a344cbe" = "Rio Branco do Sul", #02/08/23 15:50
"thermo-grid-f4e11e8e1321" = "Almirante Tamandaré")) %>% #15/08/2023 11:45
filter(Local == "Rio Branco do Sul" | Local == "Almirante Tamandaré") %>%
subset(localDate >= "2023-08-02" ) %>%#& localDate <= '2023-12-21'
unique() %>%
mutate(localDateTime = as_datetime(paste0(localDate, " ", localTime))) %>%
select(Local, localDateTime, so2, no2, o3, co, pm2p5, pm10,  rh)
# unificar planilhas de dados
data_thermo <- do.call("rbind", myfiles)
data_thermo <- data_thermo[, c(1:21)]
data_thermo <- data_thermo %>%
mutate(Local = recode((instrumentName),
"thermo-grid-883f4a344cbe" = "Rio Branco do Sul", #02/08/23 15:50
"thermo-grid-f4e11e8e1321" = "Almirante Tamandaré")) %>% #15/08/2023 11:45
filter(Local == "Rio Branco do Sul" | Local == "Almirante Tamandaré") %>%
subset(localDate >= "2023-08-02" ) %>%#& localDate <= '2023-12-21'
unique() %>%
mutate(localDateTime = as_datetime(paste0(localDate, " ", localTime))) %>%
select(Local, localDateTime, so2, no2, o3, co, pm2p5, pm10,  rh)
# unificar planilhas de dados
data_thermo <- do.call("rbind", myfiles)
data_thermo <- data_thermo[, c(1:21)]
data_thermo <- data_thermo %>%
mutate(Local = recode((instrumentName),
"thermo-grid-883f4a344cbe" = "Rio Branco do Sul", #02/08/23 15:50
"thermo-grid-f4e11e8e1321" = "Almirante Tamandaré")) %>% #15/08/2023 11:45
filter(Local == "Rio Branco do Sul" | Local == "Almirante Tamandaré") %>%
subset(localDate >= "2023-08-02" ) %>%#& localDate <= '2023-12-21'
unique() %>%
mutate(localDateTime = (paste0(localDate, " ", localTime))) %>%
select(Local, localDateTime, so2, no2, o3, co, pm2p5, pm10,  rh)
View(data_thermo)
# unificar planilhas de dados
data_thermo <- do.call("rbind", myfiles)
data_thermo <- data_thermo[, c(1:21)]
data_thermo <- data_thermo %>%
mutate(Local = recode((instrumentName),
"thermo-grid-883f4a344cbe" = "Rio Branco do Sul", #02/08/23 15:50
"thermo-grid-f4e11e8e1321" = "Almirante Tamandaré")) %>% #15/08/2023 11:45
filter(Local == "Rio Branco do Sul" | Local == "Almirante Tamandaré") %>%
subset(localDate >= "2023-08-02" ) %>%#& localDate <= '2023-12-21'
unique() %>%
mutate(localDateTime = ymd_hm(paste0(localDate, " ", localTime))) %>%
select(Local, localDateTime, so2, no2, o3, co, pm2p5, pm10,  rh)
View(data_thermo)
runGist("41f1670fb03e5af65e56429638166bcb")
runApp('myapp')
##### UNITS ACCORDING TO WHO AQG ----
Datafinal <- air_quality_data %>%
# UNIT CONVERSION: https://www.breeze-technologies.de/blog/air-pollution-how-to-convert-between-mgm3-%C2%B5gm3-ppm-ppb/
mutate(CO = CO*1.15, #from ppm to mg/m³
O3 = O3*1.96, #from ppb to ug/m³
NO2 = NO2*1.88, #from ppb to ug/m³
SO2 = SO2*2.62, #from ppb to ug/m³
PM2.5 = PM2.5, # ug/m³
PM10 = PM10) #ug/m³
names(Datafinal)[names(Datafinal) == 'sample_day'] <- 'Date'
Datafinal <- left_join(Datafinal, thermo_localizacao, by = "Cidade")
Datafinal <- mutate(Datafinal, Year = format(Date,"%Y"))
Year <- unique(Datafinal$Year)
Cidade <- unique(Datafinal$Cidade)
thermo_localizacao <- localizacao %>%
subset((Local == "Defesa Civil" | Local == "Prefeitura") & Tipo == 'outdoor') %>%
subset(Cidade == "Almirante Tamandaré" | Cidade == "Rio Branco do Sul") %>%
select(Cidade, Lat, Long)
localizacao <- read.csv("https://raw.githubusercontent.com/jessicajcss/Shiny_RMC/main/data/locais_sensores.csv",
sep = ";")
thermo_localizacao <- localizacao %>%
subset((Local == "Defesa Civil" | Local == "Prefeitura") & Tipo == 'outdoor') %>%
subset(Cidade == "Almirante Tamandaré" | Cidade == "Rio Branco do Sul") %>%
select(Cidade, Lat, Long)
colnames(thermo_localizacao) <- c('Cidade', 'Latitude', 'Longitude')
Datafinal <- left_join(Datafinal, thermo_localizacao, by = "Cidade")
Datafinal <- mutate(Datafinal, Year = format(Date,"%Y"))
Year <- unique(Datafinal$Year)
Cidade <- unique(Datafinal$Cidade)
meteo <- read.csv("https://raw.githubusercontent.com/jessicajcss/Shiny_RMC/main/data/meteo_hour.csv") %>%
mutate(data = ifelse(str_detect(date, ":00"),
as.character(date),
paste(as.character(date), "00:00:00", sep = " "))) %>%
select(-date, -Local) %>%
subset(site == "Rio Branco do Sul" | site == "Colombo") %>%
rename(Date = data,
Cidade = site)  %>%
mutate(Date = as_datetime(Date),
Cidade = case_when(Cidade == "Colombo" ~ "Almirante Tamandaré",
TRUE ~ Cidade))
Datafinal$Date <- as.Date(Datafinal$Date)
week_new <- left_join(Datafinal, meteo, by = c("Cidade", "Date"))
week_new <- subset(week_new, between(Date, as.Date(input$start_date), as.Date(input$end_date)))
input <- data.frame(1)
input <- input %>%
mutate(years = 2023,
Cities = "Rio Branco do Sul",
Cities1 = "Rio Branco do Sul",
select_date = as.Date("2023-08-10"),
start_date = as.Date("2023-08-04"),
end_date = Sys.Date(),
Poluente = "PM10")
meteo <- read.csv("https://raw.githubusercontent.com/jessicajcss/Shiny_RMC/main/data/meteo_hour.csv") %>%
mutate(data = ifelse(str_detect(date, ":00"),
as.character(date),
paste(as.character(date), "00:00:00", sep = " "))) %>%
select(-date, -Local) %>%
subset(site == "Rio Branco do Sul" | site == "Colombo") %>%
rename(Date = data,
Cidade = site)  %>%
mutate(Date = as_datetime(Date),
Cidade = case_when(Cidade == "Colombo" ~ "Almirante Tamandaré",
TRUE ~ Cidade))
Datafinal$Date <- as.Date(Datafinal$Date)
week_new <- left_join(Datafinal, meteo, by = c("Cidade", "Date"))
week_new <- subset(week_new, between(Date, as.Date(input$start_date), as.Date(input$end_date)))
library(openair)
week_new %>%
pollutionRose(pollutant = "ws",
type = "Cidade",
extra.args = "")
})
meteo <- read.csv("https://raw.githubusercontent.com/jessicajcss/Shiny_RMC/main/data/meteo_hour.csv") %>%
mutate(data = ifelse(str_detect(date, ":00"),
as.character(date),
paste(as.character(date), "00:00:00", sep = " "))) %>%
select(-date, -Local) %>%
subset(site == "Rio Branco do Sul" | site == "Colombo") %>%
rename(Date = data,
Cidade = site)  %>%
mutate(Date = as_datetime(Date),
Cidade = case_when(Cidade == "Colombo" ~ "Almirante Tamandaré",
TRUE ~ Cidade))
Datafinal$Date <- as.Date(Datafinal$Date)
week_new <- left_join(Datafinal, meteo, by = c("Cidade", "Date"))
week_new <- subset(week_new, between(Date, as.Date(input$start_date), as.Date(input$end_date)))
library(openair)
week_new %>%
pollutionRose(pollutant = "ws",
type = "Cidade")
week_new %>%
pollutionRose(pollutant = "ws",
type = "Cidade")
meteo <- read.csv("https://raw.githubusercontent.com/jessicajcss/Shiny_RMC/main/data/meteo_hour.csv") %>%
mutate(data = ifelse(str_detect(date, ":00"),
as.character(date),
paste(as.character(date), "00:00:00", sep = " "))) %>%
select(-date, -Local) %>%
subset(site == "Rio Branco do Sul" | site == "Colombo") %>%
rename(Date = data,
Cidade = site)  %>%
mutate(Date = as_datetime(Date),
Cidade = case_when(Cidade == "Colombo" ~ "Almirante Tamandaré",
TRUE ~ Cidade))
week_new <- left_join(data_thermo_agg, meteo, by = c("Cidade", "date"))
meteo <- read.csv("https://raw.githubusercontent.com/jessicajcss/Shiny_RMC/main/data/meteo_hour.csv")
library(openairmaps)
meteo <- meteo %>%
mutate(data = ifelse(str_detect(date, ":00"),
as.character(date),
paste(as.character(date), "00:00:00", sep = " "))) %>%
select(-date, -Local) %>%
subset(site == "Rio Branco do Sul" | site == "Colombo") %>%
rename(date = data,
Cidade = site)  %>%
mutate(date = as_datetime(date),
Cidade = case_when(Cidade == "Colombo" ~ "Almirante Tamandaré",
TRUE ~ Cidade))
week_new <- left_join(data_thermo_agg, meteo, by = c("Cidade", "date"))
week_new <- week_new %>% mutate(Date = as.Date(date))
week_new <- subset(week_new, between(Date, as.Date(input$start_date), as.Date(input$end_date)))
thermo_localizacao <- localizacao %>%
subset((Local == "Defesa Civil" | Local == "Prefeitura") & Tipo == 'outdoor') %>%
subset(Cidade == "Almirante Tamandaré" | Cidade == "Rio Branco do Sul") %>%
select(Cidade, Lat, Long)
colnames(thermo_localizacao) <- c('Cidade', 'Latitude', 'Longitude')
week_new <- left_join(week_new, thermo_localizacao, by = "Cidade")
if (nrow(week_new) > 1000) {
polarMap(week_new,
pollutant = c("SO2", "NO2", "O3", "CO", "PM2.5", "PM10"),
latitude = "Latitude",
longitude = "Longitude",
provider = "CartoDB.Positron")
}
if (nrow(week_new) <= 1000) {
polarMap(week_new,
statistic = "nwr",
pollutant = c("SO2", "NO2", "O3", "CO", "PM2.5", "PM10"),
latitude = "Latitude",
longitude = "Longitude",
provider = "CartoDB.Positron")
}
})
meteo <- meteo %>%
mutate(data = ifelse(str_detect(date, ":00"),
as.character(date),
paste(as.character(date), "00:00:00", sep = " "))) %>%
select(-date, -Local) %>%
subset(site == "Rio Branco do Sul" | site == "Colombo") %>%
rename(Date = data,
Cidade = site)  %>%
mutate(Date = as_datetime(Date),
Cidade = case_when(Cidade == "Colombo" ~ "Almirante Tamandaré",
TRUE ~ Cidade))
meteo <- meteo %>%
mutate(data = ifelse(str_detect(date, ":00"),
as.character(date),
paste(as.character(date), "00:00:00", sep = " "))) %>%
subset(site == "Rio Branco do Sul" | site == "Colombo") %>%
rename(Date = data,
Cidade = site)  %>%
mutate(Date = as_datetime(Date),
Cidade = case_when(Cidade == "Colombo" ~ "Almirante Tamandaré",
TRUE ~ Cidade))
meteo <- read.csv("https://raw.githubusercontent.com/jessicajcss/Shiny_RMC/main/data/meteo_hour.csv")
Datafinal$Date <- as.Date(Datafinal$Date)
week_new <- left_join(Datafinal, meteo, by = c("Cidade", "Date"))
meteo <- meteo %>%
mutate(data = ifelse(str_detect(date, ":00"),
as.character(date),
paste(as.character(date), "00:00:00", sep = " "))) %>%
select(-date, -Local) %>%
subset(site == "Rio Branco do Sul" | site == "Colombo") %>%
rename(date = data,
Cidade = site)  %>%
mutate(date = as_datetime(date),
Cidade = case_when(Cidade == "Colombo" ~ "Almirante Tamandaré",
TRUE ~ Cidade))
Datafinal$Date <- as.Date(Datafinal$Date)
week_new <- left_join(Datafinal, meteo, by = c("Cidade", "Date"))
meteo <- meteo %>%
mutate(data = ifelse(str_detect(date, ":00"),
as.character(date),
paste(as.character(date), "00:00:00", sep = " "))) %>%
subset(site == "Rio Branco do Sul" | site == "Colombo") %>%
rename(Date = data,
Cidade = site)  %>%
mutate(Date = as_datetime(Date),
Cidade = case_when(Cidade == "Colombo" ~ "Almirante Tamandaré",
TRUE ~ Cidade))
raw.githubusercontent.com
meteo <- read.csv("https://raw.githubusercontent.com/jessicajcss/Shiny_RMC/main/data/meteo_hour.csv")
meteo <- meteo %>%
mutate(data = ifelse(str_detect(date, ":00"),
as.character(date),
paste(as.character(date), "00:00:00", sep = " "))) %>%
select(-date, -Local) %>%
subset(site == "Rio Branco do Sul" | site == "Colombo") %>%
rename(date = data,
Cidade = site)  %>%
mutate(date = as_datetime(date),
Cidade = case_when(Cidade == "Colombo" ~ "Almirante Tamandaré",
TRUE ~ Cidade))
week_new <- left_join(data_thermo_agg, meteo, by = c("Cidade", "date"))
week_new <- week_new %>% mutate(Date = as.Date(date))
week_new <- subset(week_new, between(Date, as.Date(input$start_date), as.Date(input$end_date)))
thermo_localizacao <- localizacao %>%
subset((Local == "Defesa Civil" | Local == "Prefeitura") & Tipo == 'outdoor') %>%
subset(Cidade == "Almirante Tamandaré" | Cidade == "Rio Branco do Sul") %>%
select(Cidade, Lat, Long)
colnames(thermo_localizacao) <- c('Cidade', 'Latitude', 'Longitude')
week_new <- left_join(week_new, thermo_localizacao, by = "Cidade")
if (nrow(week_new) > 1000) {
polarMap(week_new,
pollutant = c("SO2", "NO2", "O3", "CO", "PM2.5", "PM10"),
latitude = "Latitude",
longitude = "Longitude",
provider = "CartoDB.Positron")
}
if (nrow(week_new) <= 1000) {
polarMap(week_new,
statistic = "nwr",
pollutant = c("SO2", "NO2", "O3", "CO", "PM2.5", "PM10"),
latitude = "Latitude",
longitude = "Longitude",
provider = "CartoDB.Positron")
}
meteo <- read.csv("https://raw.githubusercontent.com/jessicajcss/Shiny_RMC/main/data/meteo_hour.csv")
Datafinal$Date <- as.Date(Datafinal$Date)
week_new <- left_join(Datafinal, meteo, by = c("Cidade", "Date"))
meteo <- meteo %>%
mutate(data = ifelse(str_detect(date, ":00"),
as.character(date),
paste(as.character(date), "00:00:00", sep = " "))) %>%
select(-date, -Local) %>%
subset(site == "Rio Branco do Sul" | site == "Colombo") %>%
rename(Date = data,
Cidade = site)  %>%
mutate(Date = as_datetime(Date),
Cidade = case_when(Cidade == "Colombo" ~ "Almirante Tamandaré",
TRUE ~ Cidade))
Datafinal$Date <- as.Date(Datafinal$Date)
week_new <- left_join(Datafinal, meteo, by = c("Cidade", "Date"))
week_new <- subset(week_new, between(Date, as.Date(input$start_date), as.Date(input$end_date)))
library(openair)
week_new %>%
pollutionRose(pollutant = "ws",
type = "Cidade")
meteo <- read.csv("https://raw.githubusercontent.com/jessicajcss/Shiny_RMC/main/data/meteo_hour.csv")
meteo <- meteo %>%
mutate(data = ifelse(str_detect(date, ":00"),
as.character(date),
paste(as.character(date), "00:00:00", sep = " "))) %>%
select(-date, -Local) %>%
subset(site == "Rio Branco do Sul" | site == "Colombo") %>%
rename(Date = data,
Cidade = site)  %>%
mutate(Date = as_datetime(Date),
Cidade = case_when(Cidade == "Colombo" ~ "Almirante Tamandaré",
TRUE ~ Cidade))
Datafinal$Date <- as.Date(Datafinal$Date)
week_new <- left_join(Datafinal, meteo, by = c("Cidade", "Date"))
week_new <- subset(week_new, between(Date, as.Date(input$start_date), as.Date(input$end_date)))
week_new %>%
ggplot(aes(x=Date, group=1))+
geom_bar(aes(y=prec*10,col="Precipitação"),fill="green",
stat = "identity",alpha=0.5)+
geom_line(aes(y=umid,col="Umidade Relativa"),size=1)+
geom_line(aes(y=temp,col="Temperatura"),size=1)+
geom_point(aes(y=umid))+
geom_point(aes(y=temp))+
theme_bw()+
facet_wrap(.~Cidade, scales= "free_y", axes = "all_y", ncol = 1)+
theme(axis.text.x = element_text(angle = 0,vjust = 0.5),
legend.position = "bottom")+
scale_y_continuous(sec.axis = sec_axis(~./10, name= "Precipitação em mm"))+
labs(x="Dia de amostragem",y="Temperatura (ºC) \n Umidade Relativa (%)",colour = "Variável")+
scale_colour_manual(values = c("darkgreen","red","blue")) +
scale_x_datetime(
labels = scales::label_date_short(),  # automatically efficient date labels
breaks = "1 month")
runApp('myapp')
runGist("41f1670fb03e5af65e56429638166bcb")
polarMap(week_new,
pollutant = c("SO2", "NO2", "O3", "CO", "PM2.5", "PM10"),
latitude = "Latitude",
longitude = "Longitude",
provider = "CartoDB.Positron")
Poltab <- read.csv("https://raw.githubusercontent.com/jessicajcss/Shiny_RMC/main/data/pollutants_table.csv")
pm2_5data<-Poltab[Poltab$Poluente == "PM2.5", ]
View(Poltab)
no2data<-Poltab[Poltab$Poluente == "NO2", ]
pm2_5data<-Poltab[, Poltab$Poluente == "PM2.5"]
pm2_5data<-Poltab[Poltab$Poluente == "PM2.5"]
View(pm2_5data)
pm2_5data<-Poltab[,Poltab$Poluente == " PM2.5"]
DT::datatable({
pm2_5data[,c(1:3)]
},
options = list(searching = FALSE,
pageLength = 10,
lengthChange = FALSE,
order = list(list(1, 'desc'))
), rownames = FALSE
)
pm2_5data
pm2_5data<-Poltab[Poltab$Poluente == " PM2.5", ]
DT::datatable({
pm2_5data[,c(1:3)]
},
options = list(searching = FALSE,
pageLength = 10,
lengthChange = FALSE,
order = list(list(1, 'desc'))
), rownames = FALSE
)
o3data<-Poltab[Poltab$Poluente == " O3", ]
Datafinal$Date <- as.Date(Datafinal$Date)
week_new <- Datafinal[,c(1:8)]
week_new <- subset(week_new,between(Date, as.Date(input$start_date), as.Date(input$end_date)))
week_Cidade <- subset(week_new,Cidade==input$Cities1) %>%
group_by(Date) %>%
summarise_at(vars(SO2:PM2.5), mean, na.rm = TRUE)
week_Cidade2 <- subset(week_new,Cidade!=input$Cities1) %>%
group_by(Date) %>%
summarise_at(vars(SO2:PM2.5), mean, na.rm = TRUE)
week_Cidade[, c(1,4)]
color <- "red"
y    <- week_Cidade2[, c(1,4)]
plot(x,type="b",lwd=2,
xaxt="n", ylim=c(0,max(Datafinal[input$Poluente], na.rm = T)),
col=color,
xlab="Data",ylab="Concentração (ug/m³)")
lines(y,col="black",type = "b",lwd=2)
title(input$Cities1, col.main = color)
input <- input %>%
mutate(years = 2023,
Cities = "Rio Branco do Sul",
Cities1 = "Rio Branco do Sul",
select_date = as.Date("2023-08-10"),
start_date = as.Date("2024-08-04"),
end_date = Sys.Date(),
Poluente = "PM10")
Datafinal$Date <- as.Date(Datafinal$Date)
week_new <- Datafinal[,c(1:8)]
week_new <- subset(week_new,between(Date, as.Date(input$start_date), as.Date(input$end_date)))
week_Cidade <- subset(week_new,Cidade==input$Cities1) %>%
group_by(Date) %>%
summarise_at(vars(SO2:PM2.5), mean, na.rm = TRUE)
week_Cidade2 <- subset(week_new,Cidade!=input$Cities1) %>%
group_by(Date) %>%
summarise_at(vars(SO2:PM2.5), mean, na.rm = TRUE)
if(input$Poluente == "PM2.5") {x    <- week_Cidade[, c(1,2)]
color <- "green"
y    <- week_Cidade2[, c(1,2)]}
x    <- week_Cidade[, c(1,2)]
color <- "green"
y    <- week_Cidade2[, c(1,2)]
plot(x,type="b",lwd=2,
xaxt="n", ylim=c(0,max(Datafinal[input$Poluente], na.rm = T)),
col=color,
xlab="Data",ylab="Concentração (ug/m³)")
week_Cidade[, c(1,2)]
input <- data.frame(1)
input <- input %>%
mutate(years = 2023,
Cities = "Rio Branco do Sul",
Cities1 = "Rio Branco do Sul",
select_date = as.Date("2023-08-10"),
start_date = as.Date("2023-08-04"),
end_date = Sys.Date(),
Poluente = "PM10")
input <- input %>%
mutate(years = 2023,
Cities = "Rio Branco do Sul",
Cities1 = "Rio Branco do Sul",
select_date = as.Date("2023-08-10"),
start_date = as.Date("2023-08-04"),
end_date = Sys.Date(),
Poluente = "PM10")
<- week_Cidade[, c(1,2)]
x    <- week_Cidade[, c(1,2)]
color <- "green"
y    <- week_Cidade2[, c(1,2)]
Datafinal$Date <- as.Date(Datafinal$Date)
week_new <- Datafinal[,c(1:8)]
week_new <- subset(week_new,between(Date, as.Date(input$start_date), as.Date(input$end_date)))
View(week_new)
week_Cidade <- subset(week_new,Cidade==input$Cities1) %>%
group_by(Date) %>%
summarise_at(vars(SO2:PM2.5), mean, na.rm = TRUE)
week_Cidade2 <- subset(week_new,Cidade!=input$Cities1) %>%
group_by(Date) %>%
summarise_at(vars(SO2:PM2.5), mean, na.rm = TRUE)
x    <- week_Cidade[, c(1,2)]
color <- "green"
y    <- week_Cidade2[, c(1,2)]
plot(x,type="b",lwd=2,
xaxt="n", ylim=c(0, max(Datafinal[input$Poluente], na.rm = T)),
col=color,
xlab="Data",ylab="Concentração (ug/m³)")
lines(y,col="black",type = "b",lwd=2)
max(Datafinal[input$Poluente], na.rm = T)
summary(Datafinal[input$Poluente]
)
runGist("41f1670fb03e5af65e56429638166bcb")
x    <- week_Cidade[, c(1,7)]
color <- "green"
y    <- week_Cidade2[, c(1,7)]
plot(x,type="b",lwd=2,
xaxt="n", ylim=c(0, summary(Datafinal[input$Poluente], na.rm = T)),
col=color,
xlab="Data",ylab="Concentração (ug/m³)")
runGist("41f1670fb03e5af65e56429638166bcb")
#saving shinyapp as app.R into myapp folder to generate an HTML shiny app 'inside' Github.
shinylive::export(appdir = "myapp", destdir = "docs")
